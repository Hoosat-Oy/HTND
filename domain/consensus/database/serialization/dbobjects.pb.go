// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.17.2
// source: dbobjects.proto

package serialization

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DbBlock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *DbBlockHeader         `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Transactions  []*DbTransaction       `protobuf:"bytes,2,rep,name=transactions,proto3" json:"transactions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbBlock) Reset() {
	*x = DbBlock{}
	mi := &file_dbobjects_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbBlock) ProtoMessage() {}

func (x *DbBlock) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbBlock.ProtoReflect.Descriptor instead.
func (*DbBlock) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{0}
}

func (x *DbBlock) GetHeader() *DbBlockHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *DbBlock) GetTransactions() []*DbTransaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type DbBlockHeader struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Version              uint32                 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Parents              []*DbBlockLevelParents `protobuf:"bytes,2,rep,name=parents,proto3" json:"parents,omitempty"`
	HashMerkleRoot       *DbHash                `protobuf:"bytes,3,opt,name=hashMerkleRoot,proto3" json:"hashMerkleRoot,omitempty"`
	AcceptedIDMerkleRoot *DbHash                `protobuf:"bytes,4,opt,name=acceptedIDMerkleRoot,proto3" json:"acceptedIDMerkleRoot,omitempty"`
	UtxoCommitment       *DbHash                `protobuf:"bytes,5,opt,name=utxoCommitment,proto3" json:"utxoCommitment,omitempty"`
	TimeInMilliseconds   int64                  `protobuf:"varint,6,opt,name=timeInMilliseconds,proto3" json:"timeInMilliseconds,omitempty"`
	Bits                 uint32                 `protobuf:"varint,7,opt,name=bits,proto3" json:"bits,omitempty"`
	Nonce                uint64                 `protobuf:"varint,8,opt,name=nonce,proto3" json:"nonce,omitempty"`
	DaaScore             uint64                 `protobuf:"varint,9,opt,name=daaScore,proto3" json:"daaScore,omitempty"`
	BlueWork             []byte                 `protobuf:"bytes,10,opt,name=blueWork,proto3" json:"blueWork,omitempty"`
	PruningPoint         *DbHash                `protobuf:"bytes,12,opt,name=pruningPoint,proto3" json:"pruningPoint,omitempty"`
	BlueScore            uint64                 `protobuf:"varint,13,opt,name=blueScore,proto3" json:"blueScore,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *DbBlockHeader) Reset() {
	*x = DbBlockHeader{}
	mi := &file_dbobjects_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbBlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbBlockHeader) ProtoMessage() {}

func (x *DbBlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbBlockHeader.ProtoReflect.Descriptor instead.
func (*DbBlockHeader) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{1}
}

func (x *DbBlockHeader) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *DbBlockHeader) GetParents() []*DbBlockLevelParents {
	if x != nil {
		return x.Parents
	}
	return nil
}

func (x *DbBlockHeader) GetHashMerkleRoot() *DbHash {
	if x != nil {
		return x.HashMerkleRoot
	}
	return nil
}

func (x *DbBlockHeader) GetAcceptedIDMerkleRoot() *DbHash {
	if x != nil {
		return x.AcceptedIDMerkleRoot
	}
	return nil
}

func (x *DbBlockHeader) GetUtxoCommitment() *DbHash {
	if x != nil {
		return x.UtxoCommitment
	}
	return nil
}

func (x *DbBlockHeader) GetTimeInMilliseconds() int64 {
	if x != nil {
		return x.TimeInMilliseconds
	}
	return 0
}

func (x *DbBlockHeader) GetBits() uint32 {
	if x != nil {
		return x.Bits
	}
	return 0
}

func (x *DbBlockHeader) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *DbBlockHeader) GetDaaScore() uint64 {
	if x != nil {
		return x.DaaScore
	}
	return 0
}

func (x *DbBlockHeader) GetBlueWork() []byte {
	if x != nil {
		return x.BlueWork
	}
	return nil
}

func (x *DbBlockHeader) GetPruningPoint() *DbHash {
	if x != nil {
		return x.PruningPoint
	}
	return nil
}

func (x *DbBlockHeader) GetBlueScore() uint64 {
	if x != nil {
		return x.BlueScore
	}
	return 0
}

type DbBlockLevelParents struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ParentHashes  []*DbHash              `protobuf:"bytes,1,rep,name=parentHashes,proto3" json:"parentHashes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbBlockLevelParents) Reset() {
	*x = DbBlockLevelParents{}
	mi := &file_dbobjects_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbBlockLevelParents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbBlockLevelParents) ProtoMessage() {}

func (x *DbBlockLevelParents) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbBlockLevelParents.ProtoReflect.Descriptor instead.
func (*DbBlockLevelParents) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{2}
}

func (x *DbBlockLevelParents) GetParentHashes() []*DbHash {
	if x != nil {
		return x.ParentHashes
	}
	return nil
}

type DbHash struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          []byte                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbHash) Reset() {
	*x = DbHash{}
	mi := &file_dbobjects_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbHash) ProtoMessage() {}

func (x *DbHash) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbHash.ProtoReflect.Descriptor instead.
func (*DbHash) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{3}
}

func (x *DbHash) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type DbTransaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       uint32                 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Inputs        []*DbTransactionInput  `protobuf:"bytes,2,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs       []*DbTransactionOutput `protobuf:"bytes,3,rep,name=outputs,proto3" json:"outputs,omitempty"`
	LockTime      uint64                 `protobuf:"varint,4,opt,name=lockTime,proto3" json:"lockTime,omitempty"`
	SubnetworkID  *DbSubnetworkId        `protobuf:"bytes,5,opt,name=subnetworkID,proto3" json:"subnetworkID,omitempty"`
	Gas           uint64                 `protobuf:"varint,6,opt,name=gas,proto3" json:"gas,omitempty"`
	Payload       []byte                 `protobuf:"bytes,8,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbTransaction) Reset() {
	*x = DbTransaction{}
	mi := &file_dbobjects_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbTransaction) ProtoMessage() {}

func (x *DbTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbTransaction.ProtoReflect.Descriptor instead.
func (*DbTransaction) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{4}
}

func (x *DbTransaction) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *DbTransaction) GetInputs() []*DbTransactionInput {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *DbTransaction) GetOutputs() []*DbTransactionOutput {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *DbTransaction) GetLockTime() uint64 {
	if x != nil {
		return x.LockTime
	}
	return 0
}

func (x *DbTransaction) GetSubnetworkID() *DbSubnetworkId {
	if x != nil {
		return x.SubnetworkID
	}
	return nil
}

func (x *DbTransaction) GetGas() uint64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

func (x *DbTransaction) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type DbTransactionInput struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	PreviousOutpoint *DbOutpoint            `protobuf:"bytes,1,opt,name=previousOutpoint,proto3" json:"previousOutpoint,omitempty"`
	SignatureScript  []byte                 `protobuf:"bytes,2,opt,name=signatureScript,proto3" json:"signatureScript,omitempty"`
	Sequence         uint64                 `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`
	SigOpCount       uint32                 `protobuf:"varint,4,opt,name=sigOpCount,proto3" json:"sigOpCount,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DbTransactionInput) Reset() {
	*x = DbTransactionInput{}
	mi := &file_dbobjects_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbTransactionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbTransactionInput) ProtoMessage() {}

func (x *DbTransactionInput) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbTransactionInput.ProtoReflect.Descriptor instead.
func (*DbTransactionInput) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{5}
}

func (x *DbTransactionInput) GetPreviousOutpoint() *DbOutpoint {
	if x != nil {
		return x.PreviousOutpoint
	}
	return nil
}

func (x *DbTransactionInput) GetSignatureScript() []byte {
	if x != nil {
		return x.SignatureScript
	}
	return nil
}

func (x *DbTransactionInput) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *DbTransactionInput) GetSigOpCount() uint32 {
	if x != nil {
		return x.SigOpCount
	}
	return 0
}

type DbOutpoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionID *DbTransactionId       `protobuf:"bytes,1,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	Index         uint32                 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbOutpoint) Reset() {
	*x = DbOutpoint{}
	mi := &file_dbobjects_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbOutpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbOutpoint) ProtoMessage() {}

func (x *DbOutpoint) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbOutpoint.ProtoReflect.Descriptor instead.
func (*DbOutpoint) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{6}
}

func (x *DbOutpoint) GetTransactionID() *DbTransactionId {
	if x != nil {
		return x.TransactionID
	}
	return nil
}

func (x *DbOutpoint) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type DbTransactionId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId []byte                 `protobuf:"bytes,1,opt,name=transactionId,proto3" json:"transactionId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbTransactionId) Reset() {
	*x = DbTransactionId{}
	mi := &file_dbobjects_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbTransactionId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbTransactionId) ProtoMessage() {}

func (x *DbTransactionId) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbTransactionId.ProtoReflect.Descriptor instead.
func (*DbTransactionId) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{7}
}

func (x *DbTransactionId) GetTransactionId() []byte {
	if x != nil {
		return x.TransactionId
	}
	return nil
}

type DbTransactionOutput struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Value           uint64                 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	ScriptPublicKey *DbScriptPublicKey     `protobuf:"bytes,2,opt,name=scriptPublicKey,proto3" json:"scriptPublicKey,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DbTransactionOutput) Reset() {
	*x = DbTransactionOutput{}
	mi := &file_dbobjects_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbTransactionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbTransactionOutput) ProtoMessage() {}

func (x *DbTransactionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbTransactionOutput.ProtoReflect.Descriptor instead.
func (*DbTransactionOutput) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{8}
}

func (x *DbTransactionOutput) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *DbTransactionOutput) GetScriptPublicKey() *DbScriptPublicKey {
	if x != nil {
		return x.ScriptPublicKey
	}
	return nil
}

type DbSubnetworkId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubnetworkId  []byte                 `protobuf:"bytes,1,opt,name=subnetworkId,proto3" json:"subnetworkId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbSubnetworkId) Reset() {
	*x = DbSubnetworkId{}
	mi := &file_dbobjects_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbSubnetworkId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbSubnetworkId) ProtoMessage() {}

func (x *DbSubnetworkId) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbSubnetworkId.ProtoReflect.Descriptor instead.
func (*DbSubnetworkId) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{9}
}

func (x *DbSubnetworkId) GetSubnetworkId() []byte {
	if x != nil {
		return x.SubnetworkId
	}
	return nil
}

type DbAcceptanceData struct {
	state               protoimpl.MessageState   `protogen:"open.v1"`
	BlockAcceptanceData []*DbBlockAcceptanceData `protobuf:"bytes,1,rep,name=blockAcceptanceData,proto3" json:"blockAcceptanceData,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *DbAcceptanceData) Reset() {
	*x = DbAcceptanceData{}
	mi := &file_dbobjects_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbAcceptanceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbAcceptanceData) ProtoMessage() {}

func (x *DbAcceptanceData) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbAcceptanceData.ProtoReflect.Descriptor instead.
func (*DbAcceptanceData) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{10}
}

func (x *DbAcceptanceData) GetBlockAcceptanceData() []*DbBlockAcceptanceData {
	if x != nil {
		return x.BlockAcceptanceData
	}
	return nil
}

type DbBlockAcceptanceData struct {
	state                     protoimpl.MessageState         `protogen:"open.v1"`
	TransactionAcceptanceData []*DbTransactionAcceptanceData `protobuf:"bytes,1,rep,name=transactionAcceptanceData,proto3" json:"transactionAcceptanceData,omitempty"`
	BlockHash                 *DbHash                        `protobuf:"bytes,2,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *DbBlockAcceptanceData) Reset() {
	*x = DbBlockAcceptanceData{}
	mi := &file_dbobjects_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbBlockAcceptanceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbBlockAcceptanceData) ProtoMessage() {}

func (x *DbBlockAcceptanceData) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbBlockAcceptanceData.ProtoReflect.Descriptor instead.
func (*DbBlockAcceptanceData) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{11}
}

func (x *DbBlockAcceptanceData) GetTransactionAcceptanceData() []*DbTransactionAcceptanceData {
	if x != nil {
		return x.TransactionAcceptanceData
	}
	return nil
}

func (x *DbBlockAcceptanceData) GetBlockHash() *DbHash {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

type DbTransactionAcceptanceData struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	Transaction                 *DbTransaction         `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Fee                         uint64                 `protobuf:"varint,2,opt,name=fee,proto3" json:"fee,omitempty"`
	IsAccepted                  bool                   `protobuf:"varint,3,opt,name=isAccepted,proto3" json:"isAccepted,omitempty"`
	TransactionInputUtxoEntries []*DbUtxoEntry         `protobuf:"bytes,4,rep,name=transactionInputUtxoEntries,proto3" json:"transactionInputUtxoEntries,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *DbTransactionAcceptanceData) Reset() {
	*x = DbTransactionAcceptanceData{}
	mi := &file_dbobjects_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbTransactionAcceptanceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbTransactionAcceptanceData) ProtoMessage() {}

func (x *DbTransactionAcceptanceData) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbTransactionAcceptanceData.ProtoReflect.Descriptor instead.
func (*DbTransactionAcceptanceData) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{12}
}

func (x *DbTransactionAcceptanceData) GetTransaction() *DbTransaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *DbTransactionAcceptanceData) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *DbTransactionAcceptanceData) GetIsAccepted() bool {
	if x != nil {
		return x.IsAccepted
	}
	return false
}

func (x *DbTransactionAcceptanceData) GetTransactionInputUtxoEntries() []*DbUtxoEntry {
	if x != nil {
		return x.TransactionInputUtxoEntries
	}
	return nil
}

type DbBlockRelations struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Parents       []*DbHash              `protobuf:"bytes,1,rep,name=parents,proto3" json:"parents,omitempty"`
	Children      []*DbHash              `protobuf:"bytes,2,rep,name=children,proto3" json:"children,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbBlockRelations) Reset() {
	*x = DbBlockRelations{}
	mi := &file_dbobjects_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbBlockRelations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbBlockRelations) ProtoMessage() {}

func (x *DbBlockRelations) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbBlockRelations.ProtoReflect.Descriptor instead.
func (*DbBlockRelations) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{13}
}

func (x *DbBlockRelations) GetParents() []*DbHash {
	if x != nil {
		return x.Parents
	}
	return nil
}

func (x *DbBlockRelations) GetChildren() []*DbHash {
	if x != nil {
		return x.Children
	}
	return nil
}

type DbBlockStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        uint32                 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbBlockStatus) Reset() {
	*x = DbBlockStatus{}
	mi := &file_dbobjects_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbBlockStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbBlockStatus) ProtoMessage() {}

func (x *DbBlockStatus) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbBlockStatus.ProtoReflect.Descriptor instead.
func (*DbBlockStatus) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{14}
}

func (x *DbBlockStatus) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type DbBlockGhostdagData struct {
	state              protoimpl.MessageState  `protogen:"open.v1"`
	BlueScore          uint64                  `protobuf:"varint,1,opt,name=blueScore,proto3" json:"blueScore,omitempty"`
	BlueWork           []byte                  `protobuf:"bytes,2,opt,name=blueWork,proto3" json:"blueWork,omitempty"`
	SelectedParent     *DbHash                 `protobuf:"bytes,3,opt,name=selectedParent,proto3" json:"selectedParent,omitempty"`
	MergeSetBlues      []*DbHash               `protobuf:"bytes,4,rep,name=mergeSetBlues,proto3" json:"mergeSetBlues,omitempty"`
	MergeSetReds       []*DbHash               `protobuf:"bytes,5,rep,name=mergeSetReds,proto3" json:"mergeSetReds,omitempty"`
	BluesAnticoneSizes []*DbBluesAnticoneSizes `protobuf:"bytes,6,rep,name=bluesAnticoneSizes,proto3" json:"bluesAnticoneSizes,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DbBlockGhostdagData) Reset() {
	*x = DbBlockGhostdagData{}
	mi := &file_dbobjects_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbBlockGhostdagData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbBlockGhostdagData) ProtoMessage() {}

func (x *DbBlockGhostdagData) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbBlockGhostdagData.ProtoReflect.Descriptor instead.
func (*DbBlockGhostdagData) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{15}
}

func (x *DbBlockGhostdagData) GetBlueScore() uint64 {
	if x != nil {
		return x.BlueScore
	}
	return 0
}

func (x *DbBlockGhostdagData) GetBlueWork() []byte {
	if x != nil {
		return x.BlueWork
	}
	return nil
}

func (x *DbBlockGhostdagData) GetSelectedParent() *DbHash {
	if x != nil {
		return x.SelectedParent
	}
	return nil
}

func (x *DbBlockGhostdagData) GetMergeSetBlues() []*DbHash {
	if x != nil {
		return x.MergeSetBlues
	}
	return nil
}

func (x *DbBlockGhostdagData) GetMergeSetReds() []*DbHash {
	if x != nil {
		return x.MergeSetReds
	}
	return nil
}

func (x *DbBlockGhostdagData) GetBluesAnticoneSizes() []*DbBluesAnticoneSizes {
	if x != nil {
		return x.BluesAnticoneSizes
	}
	return nil
}

type DbBluesAnticoneSizes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlueHash      *DbHash                `protobuf:"bytes,1,opt,name=blueHash,proto3" json:"blueHash,omitempty"`
	AnticoneSize  uint32                 `protobuf:"varint,2,opt,name=anticoneSize,proto3" json:"anticoneSize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbBluesAnticoneSizes) Reset() {
	*x = DbBluesAnticoneSizes{}
	mi := &file_dbobjects_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbBluesAnticoneSizes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbBluesAnticoneSizes) ProtoMessage() {}

func (x *DbBluesAnticoneSizes) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbBluesAnticoneSizes.ProtoReflect.Descriptor instead.
func (*DbBluesAnticoneSizes) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{16}
}

func (x *DbBluesAnticoneSizes) GetBlueHash() *DbHash {
	if x != nil {
		return x.BlueHash
	}
	return nil
}

func (x *DbBluesAnticoneSizes) GetAnticoneSize() uint32 {
	if x != nil {
		return x.AnticoneSize
	}
	return 0
}

type DbMultiset struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Multiset      []byte                 `protobuf:"bytes,1,opt,name=multiset,proto3" json:"multiset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbMultiset) Reset() {
	*x = DbMultiset{}
	mi := &file_dbobjects_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbMultiset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbMultiset) ProtoMessage() {}

func (x *DbMultiset) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbMultiset.ProtoReflect.Descriptor instead.
func (*DbMultiset) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{17}
}

func (x *DbMultiset) GetMultiset() []byte {
	if x != nil {
		return x.Multiset
	}
	return nil
}

type DbUtxoSet struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Items         []*DbUtxoCollectionItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbUtxoSet) Reset() {
	*x = DbUtxoSet{}
	mi := &file_dbobjects_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbUtxoSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbUtxoSet) ProtoMessage() {}

func (x *DbUtxoSet) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbUtxoSet.ProtoReflect.Descriptor instead.
func (*DbUtxoSet) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{18}
}

func (x *DbUtxoSet) GetItems() []*DbUtxoCollectionItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type DbUtxoCollectionItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Outpoint      *DbOutpoint            `protobuf:"bytes,1,opt,name=outpoint,proto3" json:"outpoint,omitempty"`
	UtxoEntry     *DbUtxoEntry           `protobuf:"bytes,2,opt,name=utxoEntry,proto3" json:"utxoEntry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbUtxoCollectionItem) Reset() {
	*x = DbUtxoCollectionItem{}
	mi := &file_dbobjects_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbUtxoCollectionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbUtxoCollectionItem) ProtoMessage() {}

func (x *DbUtxoCollectionItem) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbUtxoCollectionItem.ProtoReflect.Descriptor instead.
func (*DbUtxoCollectionItem) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{19}
}

func (x *DbUtxoCollectionItem) GetOutpoint() *DbOutpoint {
	if x != nil {
		return x.Outpoint
	}
	return nil
}

func (x *DbUtxoCollectionItem) GetUtxoEntry() *DbUtxoEntry {
	if x != nil {
		return x.UtxoEntry
	}
	return nil
}

type DbScriptPublicKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Script        []byte                 `protobuf:"bytes,1,opt,name=script,proto3" json:"script,omitempty"`
	Version       uint32                 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbScriptPublicKey) Reset() {
	*x = DbScriptPublicKey{}
	mi := &file_dbobjects_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbScriptPublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbScriptPublicKey) ProtoMessage() {}

func (x *DbScriptPublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbScriptPublicKey.ProtoReflect.Descriptor instead.
func (*DbScriptPublicKey) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{20}
}

func (x *DbScriptPublicKey) GetScript() []byte {
	if x != nil {
		return x.Script
	}
	return nil
}

func (x *DbScriptPublicKey) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type DbUtxoEntry struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Amount          uint64                 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	ScriptPublicKey *DbScriptPublicKey     `protobuf:"bytes,2,opt,name=scriptPublicKey,proto3" json:"scriptPublicKey,omitempty"`
	BlockDaaScore   uint64                 `protobuf:"varint,3,opt,name=blockDaaScore,proto3" json:"blockDaaScore,omitempty"`
	IsCoinbase      bool                   `protobuf:"varint,4,opt,name=isCoinbase,proto3" json:"isCoinbase,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DbUtxoEntry) Reset() {
	*x = DbUtxoEntry{}
	mi := &file_dbobjects_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbUtxoEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbUtxoEntry) ProtoMessage() {}

func (x *DbUtxoEntry) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbUtxoEntry.ProtoReflect.Descriptor instead.
func (*DbUtxoEntry) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{21}
}

func (x *DbUtxoEntry) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *DbUtxoEntry) GetScriptPublicKey() *DbScriptPublicKey {
	if x != nil {
		return x.ScriptPublicKey
	}
	return nil
}

func (x *DbUtxoEntry) GetBlockDaaScore() uint64 {
	if x != nil {
		return x.BlockDaaScore
	}
	return 0
}

func (x *DbUtxoEntry) GetIsCoinbase() bool {
	if x != nil {
		return x.IsCoinbase
	}
	return false
}

type DbReachabilityData struct {
	state             protoimpl.MessageState  `protogen:"open.v1"`
	Children          []*DbHash               `protobuf:"bytes,1,rep,name=children,proto3" json:"children,omitempty"`
	Parent            *DbHash                 `protobuf:"bytes,2,opt,name=parent,proto3" json:"parent,omitempty"`
	Interval          *DbReachabilityInterval `protobuf:"bytes,3,opt,name=interval,proto3" json:"interval,omitempty"`
	FutureCoveringSet []*DbHash               `protobuf:"bytes,4,rep,name=futureCoveringSet,proto3" json:"futureCoveringSet,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DbReachabilityData) Reset() {
	*x = DbReachabilityData{}
	mi := &file_dbobjects_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbReachabilityData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbReachabilityData) ProtoMessage() {}

func (x *DbReachabilityData) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbReachabilityData.ProtoReflect.Descriptor instead.
func (*DbReachabilityData) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{22}
}

func (x *DbReachabilityData) GetChildren() []*DbHash {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *DbReachabilityData) GetParent() *DbHash {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *DbReachabilityData) GetInterval() *DbReachabilityInterval {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *DbReachabilityData) GetFutureCoveringSet() []*DbHash {
	if x != nil {
		return x.FutureCoveringSet
	}
	return nil
}

type DbReachabilityInterval struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         uint64                 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End           uint64                 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbReachabilityInterval) Reset() {
	*x = DbReachabilityInterval{}
	mi := &file_dbobjects_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbReachabilityInterval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbReachabilityInterval) ProtoMessage() {}

func (x *DbReachabilityInterval) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbReachabilityInterval.ProtoReflect.Descriptor instead.
func (*DbReachabilityInterval) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{23}
}

func (x *DbReachabilityInterval) GetStart() uint64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *DbReachabilityInterval) GetEnd() uint64 {
	if x != nil {
		return x.End
	}
	return 0
}

type DbUtxoDiff struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	ToAdd         []*DbUtxoCollectionItem `protobuf:"bytes,1,rep,name=toAdd,proto3" json:"toAdd,omitempty"`
	ToRemove      []*DbUtxoCollectionItem `protobuf:"bytes,2,rep,name=toRemove,proto3" json:"toRemove,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbUtxoDiff) Reset() {
	*x = DbUtxoDiff{}
	mi := &file_dbobjects_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbUtxoDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbUtxoDiff) ProtoMessage() {}

func (x *DbUtxoDiff) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbUtxoDiff.ProtoReflect.Descriptor instead.
func (*DbUtxoDiff) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{24}
}

func (x *DbUtxoDiff) GetToAdd() []*DbUtxoCollectionItem {
	if x != nil {
		return x.ToAdd
	}
	return nil
}

func (x *DbUtxoDiff) GetToRemove() []*DbUtxoCollectionItem {
	if x != nil {
		return x.ToRemove
	}
	return nil
}

type DbTips struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tips          []*DbHash              `protobuf:"bytes,1,rep,name=tips,proto3" json:"tips,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbTips) Reset() {
	*x = DbTips{}
	mi := &file_dbobjects_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbTips) ProtoMessage() {}

func (x *DbTips) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbTips.ProtoReflect.Descriptor instead.
func (*DbTips) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{25}
}

func (x *DbTips) GetTips() []*DbHash {
	if x != nil {
		return x.Tips
	}
	return nil
}

type DbBlockCount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         uint64                 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbBlockCount) Reset() {
	*x = DbBlockCount{}
	mi := &file_dbobjects_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbBlockCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbBlockCount) ProtoMessage() {}

func (x *DbBlockCount) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbBlockCount.ProtoReflect.Descriptor instead.
func (*DbBlockCount) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{26}
}

func (x *DbBlockCount) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type DbBlockHeaderCount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         uint64                 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbBlockHeaderCount) Reset() {
	*x = DbBlockHeaderCount{}
	mi := &file_dbobjects_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbBlockHeaderCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbBlockHeaderCount) ProtoMessage() {}

func (x *DbBlockHeaderCount) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbBlockHeaderCount.ProtoReflect.Descriptor instead.
func (*DbBlockHeaderCount) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{27}
}

func (x *DbBlockHeaderCount) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type DbBlockGHOSTDAGDataHashPair struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          *DbHash                `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	GhostdagData  *DbBlockGhostdagData   `protobuf:"bytes,2,opt,name=GhostdagData,proto3" json:"GhostdagData,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DbBlockGHOSTDAGDataHashPair) Reset() {
	*x = DbBlockGHOSTDAGDataHashPair{}
	mi := &file_dbobjects_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DbBlockGHOSTDAGDataHashPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbBlockGHOSTDAGDataHashPair) ProtoMessage() {}

func (x *DbBlockGHOSTDAGDataHashPair) ProtoReflect() protoreflect.Message {
	mi := &file_dbobjects_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DbBlockGHOSTDAGDataHashPair.ProtoReflect.Descriptor instead.
func (*DbBlockGHOSTDAGDataHashPair) Descriptor() ([]byte, []int) {
	return file_dbobjects_proto_rawDescGZIP(), []int{28}
}

func (x *DbBlockGHOSTDAGDataHashPair) GetHash() *DbHash {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *DbBlockGHOSTDAGDataHashPair) GetGhostdagData() *DbBlockGhostdagData {
	if x != nil {
		return x.GhostdagData
	}
	return nil
}

var File_dbobjects_proto protoreflect.FileDescriptor

const file_dbobjects_proto_rawDesc = "" +
	"\n" +
	"\x0fdbobjects.proto\x12\rserialization\"\x81\x01\n" +
	"\aDbBlock\x124\n" +
	"\x06header\x18\x01 \x01(\v2\x1c.serialization.DbBlockHeaderR\x06header\x12@\n" +
	"\ftransactions\x18\x02 \x03(\v2\x1c.serialization.DbTransactionR\ftransactions\"\x9b\x04\n" +
	"\rDbBlockHeader\x12\x18\n" +
	"\aversion\x18\x01 \x01(\rR\aversion\x12<\n" +
	"\aparents\x18\x02 \x03(\v2\".serialization.DbBlockLevelParentsR\aparents\x12=\n" +
	"\x0ehashMerkleRoot\x18\x03 \x01(\v2\x15.serialization.DbHashR\x0ehashMerkleRoot\x12I\n" +
	"\x14acceptedIDMerkleRoot\x18\x04 \x01(\v2\x15.serialization.DbHashR\x14acceptedIDMerkleRoot\x12=\n" +
	"\x0eutxoCommitment\x18\x05 \x01(\v2\x15.serialization.DbHashR\x0eutxoCommitment\x12.\n" +
	"\x12timeInMilliseconds\x18\x06 \x01(\x03R\x12timeInMilliseconds\x12\x12\n" +
	"\x04bits\x18\a \x01(\rR\x04bits\x12\x14\n" +
	"\x05nonce\x18\b \x01(\x04R\x05nonce\x12\x1a\n" +
	"\bdaaScore\x18\t \x01(\x04R\bdaaScore\x12\x1a\n" +
	"\bblueWork\x18\n" +
	" \x01(\fR\bblueWork\x129\n" +
	"\fpruningPoint\x18\f \x01(\v2\x15.serialization.DbHashR\fpruningPoint\x12\x1c\n" +
	"\tblueScore\x18\r \x01(\x04R\tblueScore\"P\n" +
	"\x13DbBlockLevelParents\x129\n" +
	"\fparentHashes\x18\x01 \x03(\v2\x15.serialization.DbHashR\fparentHashes\"\x1c\n" +
	"\x06DbHash\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\fR\x04hash\"\xad\x02\n" +
	"\rDbTransaction\x12\x18\n" +
	"\aversion\x18\x01 \x01(\rR\aversion\x129\n" +
	"\x06inputs\x18\x02 \x03(\v2!.serialization.DbTransactionInputR\x06inputs\x12<\n" +
	"\aoutputs\x18\x03 \x03(\v2\".serialization.DbTransactionOutputR\aoutputs\x12\x1a\n" +
	"\blockTime\x18\x04 \x01(\x04R\blockTime\x12A\n" +
	"\fsubnetworkID\x18\x05 \x01(\v2\x1d.serialization.DbSubnetworkIdR\fsubnetworkID\x12\x10\n" +
	"\x03gas\x18\x06 \x01(\x04R\x03gas\x12\x18\n" +
	"\apayload\x18\b \x01(\fR\apayload\"\xc1\x01\n" +
	"\x12DbTransactionInput\x12E\n" +
	"\x10previousOutpoint\x18\x01 \x01(\v2\x19.serialization.DbOutpointR\x10previousOutpoint\x12(\n" +
	"\x0fsignatureScript\x18\x02 \x01(\fR\x0fsignatureScript\x12\x1a\n" +
	"\bsequence\x18\x03 \x01(\x04R\bsequence\x12\x1e\n" +
	"\n" +
	"sigOpCount\x18\x04 \x01(\rR\n" +
	"sigOpCount\"h\n" +
	"\n" +
	"DbOutpoint\x12D\n" +
	"\rtransactionID\x18\x01 \x01(\v2\x1e.serialization.DbTransactionIdR\rtransactionID\x12\x14\n" +
	"\x05index\x18\x02 \x01(\rR\x05index\"7\n" +
	"\x0fDbTransactionId\x12$\n" +
	"\rtransactionId\x18\x01 \x01(\fR\rtransactionId\"w\n" +
	"\x13DbTransactionOutput\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x04R\x05value\x12J\n" +
	"\x0fscriptPublicKey\x18\x02 \x01(\v2 .serialization.DbScriptPublicKeyR\x0fscriptPublicKey\"4\n" +
	"\x0eDbSubnetworkId\x12\"\n" +
	"\fsubnetworkId\x18\x01 \x01(\fR\fsubnetworkId\"j\n" +
	"\x10DbAcceptanceData\x12V\n" +
	"\x13blockAcceptanceData\x18\x01 \x03(\v2$.serialization.DbBlockAcceptanceDataR\x13blockAcceptanceData\"\xb6\x01\n" +
	"\x15DbBlockAcceptanceData\x12h\n" +
	"\x19transactionAcceptanceData\x18\x01 \x03(\v2*.serialization.DbTransactionAcceptanceDataR\x19transactionAcceptanceData\x123\n" +
	"\tblockHash\x18\x02 \x01(\v2\x15.serialization.DbHashR\tblockHash\"\xed\x01\n" +
	"\x1bDbTransactionAcceptanceData\x12>\n" +
	"\vtransaction\x18\x01 \x01(\v2\x1c.serialization.DbTransactionR\vtransaction\x12\x10\n" +
	"\x03fee\x18\x02 \x01(\x04R\x03fee\x12\x1e\n" +
	"\n" +
	"isAccepted\x18\x03 \x01(\bR\n" +
	"isAccepted\x12\\\n" +
	"\x1btransactionInputUtxoEntries\x18\x04 \x03(\v2\x1a.serialization.DbUtxoEntryR\x1btransactionInputUtxoEntries\"v\n" +
	"\x10DbBlockRelations\x12/\n" +
	"\aparents\x18\x01 \x03(\v2\x15.serialization.DbHashR\aparents\x121\n" +
	"\bchildren\x18\x02 \x03(\v2\x15.serialization.DbHashR\bchildren\"'\n" +
	"\rDbBlockStatus\x12\x16\n" +
	"\x06status\x18\x01 \x01(\rR\x06status\"\xdb\x02\n" +
	"\x13DbBlockGhostdagData\x12\x1c\n" +
	"\tblueScore\x18\x01 \x01(\x04R\tblueScore\x12\x1a\n" +
	"\bblueWork\x18\x02 \x01(\fR\bblueWork\x12=\n" +
	"\x0eselectedParent\x18\x03 \x01(\v2\x15.serialization.DbHashR\x0eselectedParent\x12;\n" +
	"\rmergeSetBlues\x18\x04 \x03(\v2\x15.serialization.DbHashR\rmergeSetBlues\x129\n" +
	"\fmergeSetReds\x18\x05 \x03(\v2\x15.serialization.DbHashR\fmergeSetReds\x12S\n" +
	"\x12bluesAnticoneSizes\x18\x06 \x03(\v2#.serialization.DbBluesAnticoneSizesR\x12bluesAnticoneSizes\"m\n" +
	"\x14DbBluesAnticoneSizes\x121\n" +
	"\bblueHash\x18\x01 \x01(\v2\x15.serialization.DbHashR\bblueHash\x12\"\n" +
	"\fanticoneSize\x18\x02 \x01(\rR\fanticoneSize\"(\n" +
	"\n" +
	"DbMultiset\x12\x1a\n" +
	"\bmultiset\x18\x01 \x01(\fR\bmultiset\"F\n" +
	"\tDbUtxoSet\x129\n" +
	"\x05items\x18\x01 \x03(\v2#.serialization.DbUtxoCollectionItemR\x05items\"\x87\x01\n" +
	"\x14DbUtxoCollectionItem\x125\n" +
	"\boutpoint\x18\x01 \x01(\v2\x19.serialization.DbOutpointR\boutpoint\x128\n" +
	"\tutxoEntry\x18\x02 \x01(\v2\x1a.serialization.DbUtxoEntryR\tutxoEntry\"E\n" +
	"\x11DbScriptPublicKey\x12\x16\n" +
	"\x06script\x18\x01 \x01(\fR\x06script\x12\x18\n" +
	"\aversion\x18\x02 \x01(\rR\aversion\"\xb7\x01\n" +
	"\vDbUtxoEntry\x12\x16\n" +
	"\x06amount\x18\x01 \x01(\x04R\x06amount\x12J\n" +
	"\x0fscriptPublicKey\x18\x02 \x01(\v2 .serialization.DbScriptPublicKeyR\x0fscriptPublicKey\x12$\n" +
	"\rblockDaaScore\x18\x03 \x01(\x04R\rblockDaaScore\x12\x1e\n" +
	"\n" +
	"isCoinbase\x18\x04 \x01(\bR\n" +
	"isCoinbase\"\xfe\x01\n" +
	"\x12DbReachabilityData\x121\n" +
	"\bchildren\x18\x01 \x03(\v2\x15.serialization.DbHashR\bchildren\x12-\n" +
	"\x06parent\x18\x02 \x01(\v2\x15.serialization.DbHashR\x06parent\x12A\n" +
	"\binterval\x18\x03 \x01(\v2%.serialization.DbReachabilityIntervalR\binterval\x12C\n" +
	"\x11futureCoveringSet\x18\x04 \x03(\v2\x15.serialization.DbHashR\x11futureCoveringSet\"@\n" +
	"\x16DbReachabilityInterval\x12\x14\n" +
	"\x05start\x18\x01 \x01(\x04R\x05start\x12\x10\n" +
	"\x03end\x18\x02 \x01(\x04R\x03end\"\x88\x01\n" +
	"\n" +
	"DbUtxoDiff\x129\n" +
	"\x05toAdd\x18\x01 \x03(\v2#.serialization.DbUtxoCollectionItemR\x05toAdd\x12?\n" +
	"\btoRemove\x18\x02 \x03(\v2#.serialization.DbUtxoCollectionItemR\btoRemove\"3\n" +
	"\x06DbTips\x12)\n" +
	"\x04tips\x18\x01 \x03(\v2\x15.serialization.DbHashR\x04tips\"$\n" +
	"\fDbBlockCount\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\"*\n" +
	"\x12DbBlockHeaderCount\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\"\x90\x01\n" +
	"\x1bDbBlockGHOSTDAGDataHashPair\x12)\n" +
	"\x04hash\x18\x01 \x01(\v2\x15.serialization.DbHashR\x04hash\x12F\n" +
	"\fGhostdagData\x18\x02 \x01(\v2\".serialization.DbBlockGhostdagDataR\fGhostdagDataB)Z'github.com/Hoosat-Oy/HTND/serializationb\x06proto3"

var (
	file_dbobjects_proto_rawDescOnce sync.Once
	file_dbobjects_proto_rawDescData []byte
)

func file_dbobjects_proto_rawDescGZIP() []byte {
	file_dbobjects_proto_rawDescOnce.Do(func() {
		file_dbobjects_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dbobjects_proto_rawDesc), len(file_dbobjects_proto_rawDesc)))
	})
	return file_dbobjects_proto_rawDescData
}

var file_dbobjects_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_dbobjects_proto_goTypes = []any{
	(*DbBlock)(nil),                     // 0: serialization.DbBlock
	(*DbBlockHeader)(nil),               // 1: serialization.DbBlockHeader
	(*DbBlockLevelParents)(nil),         // 2: serialization.DbBlockLevelParents
	(*DbHash)(nil),                      // 3: serialization.DbHash
	(*DbTransaction)(nil),               // 4: serialization.DbTransaction
	(*DbTransactionInput)(nil),          // 5: serialization.DbTransactionInput
	(*DbOutpoint)(nil),                  // 6: serialization.DbOutpoint
	(*DbTransactionId)(nil),             // 7: serialization.DbTransactionId
	(*DbTransactionOutput)(nil),         // 8: serialization.DbTransactionOutput
	(*DbSubnetworkId)(nil),              // 9: serialization.DbSubnetworkId
	(*DbAcceptanceData)(nil),            // 10: serialization.DbAcceptanceData
	(*DbBlockAcceptanceData)(nil),       // 11: serialization.DbBlockAcceptanceData
	(*DbTransactionAcceptanceData)(nil), // 12: serialization.DbTransactionAcceptanceData
	(*DbBlockRelations)(nil),            // 13: serialization.DbBlockRelations
	(*DbBlockStatus)(nil),               // 14: serialization.DbBlockStatus
	(*DbBlockGhostdagData)(nil),         // 15: serialization.DbBlockGhostdagData
	(*DbBluesAnticoneSizes)(nil),        // 16: serialization.DbBluesAnticoneSizes
	(*DbMultiset)(nil),                  // 17: serialization.DbMultiset
	(*DbUtxoSet)(nil),                   // 18: serialization.DbUtxoSet
	(*DbUtxoCollectionItem)(nil),        // 19: serialization.DbUtxoCollectionItem
	(*DbScriptPublicKey)(nil),           // 20: serialization.DbScriptPublicKey
	(*DbUtxoEntry)(nil),                 // 21: serialization.DbUtxoEntry
	(*DbReachabilityData)(nil),          // 22: serialization.DbReachabilityData
	(*DbReachabilityInterval)(nil),      // 23: serialization.DbReachabilityInterval
	(*DbUtxoDiff)(nil),                  // 24: serialization.DbUtxoDiff
	(*DbTips)(nil),                      // 25: serialization.DbTips
	(*DbBlockCount)(nil),                // 26: serialization.DbBlockCount
	(*DbBlockHeaderCount)(nil),          // 27: serialization.DbBlockHeaderCount
	(*DbBlockGHOSTDAGDataHashPair)(nil), // 28: serialization.DbBlockGHOSTDAGDataHashPair
}
var file_dbobjects_proto_depIdxs = []int32{
	1,  // 0: serialization.DbBlock.header:type_name -> serialization.DbBlockHeader
	4,  // 1: serialization.DbBlock.transactions:type_name -> serialization.DbTransaction
	2,  // 2: serialization.DbBlockHeader.parents:type_name -> serialization.DbBlockLevelParents
	3,  // 3: serialization.DbBlockHeader.hashMerkleRoot:type_name -> serialization.DbHash
	3,  // 4: serialization.DbBlockHeader.acceptedIDMerkleRoot:type_name -> serialization.DbHash
	3,  // 5: serialization.DbBlockHeader.utxoCommitment:type_name -> serialization.DbHash
	3,  // 6: serialization.DbBlockHeader.pruningPoint:type_name -> serialization.DbHash
	3,  // 7: serialization.DbBlockLevelParents.parentHashes:type_name -> serialization.DbHash
	5,  // 8: serialization.DbTransaction.inputs:type_name -> serialization.DbTransactionInput
	8,  // 9: serialization.DbTransaction.outputs:type_name -> serialization.DbTransactionOutput
	9,  // 10: serialization.DbTransaction.subnetworkID:type_name -> serialization.DbSubnetworkId
	6,  // 11: serialization.DbTransactionInput.previousOutpoint:type_name -> serialization.DbOutpoint
	7,  // 12: serialization.DbOutpoint.transactionID:type_name -> serialization.DbTransactionId
	20, // 13: serialization.DbTransactionOutput.scriptPublicKey:type_name -> serialization.DbScriptPublicKey
	11, // 14: serialization.DbAcceptanceData.blockAcceptanceData:type_name -> serialization.DbBlockAcceptanceData
	12, // 15: serialization.DbBlockAcceptanceData.transactionAcceptanceData:type_name -> serialization.DbTransactionAcceptanceData
	3,  // 16: serialization.DbBlockAcceptanceData.blockHash:type_name -> serialization.DbHash
	4,  // 17: serialization.DbTransactionAcceptanceData.transaction:type_name -> serialization.DbTransaction
	21, // 18: serialization.DbTransactionAcceptanceData.transactionInputUtxoEntries:type_name -> serialization.DbUtxoEntry
	3,  // 19: serialization.DbBlockRelations.parents:type_name -> serialization.DbHash
	3,  // 20: serialization.DbBlockRelations.children:type_name -> serialization.DbHash
	3,  // 21: serialization.DbBlockGhostdagData.selectedParent:type_name -> serialization.DbHash
	3,  // 22: serialization.DbBlockGhostdagData.mergeSetBlues:type_name -> serialization.DbHash
	3,  // 23: serialization.DbBlockGhostdagData.mergeSetReds:type_name -> serialization.DbHash
	16, // 24: serialization.DbBlockGhostdagData.bluesAnticoneSizes:type_name -> serialization.DbBluesAnticoneSizes
	3,  // 25: serialization.DbBluesAnticoneSizes.blueHash:type_name -> serialization.DbHash
	19, // 26: serialization.DbUtxoSet.items:type_name -> serialization.DbUtxoCollectionItem
	6,  // 27: serialization.DbUtxoCollectionItem.outpoint:type_name -> serialization.DbOutpoint
	21, // 28: serialization.DbUtxoCollectionItem.utxoEntry:type_name -> serialization.DbUtxoEntry
	20, // 29: serialization.DbUtxoEntry.scriptPublicKey:type_name -> serialization.DbScriptPublicKey
	3,  // 30: serialization.DbReachabilityData.children:type_name -> serialization.DbHash
	3,  // 31: serialization.DbReachabilityData.parent:type_name -> serialization.DbHash
	23, // 32: serialization.DbReachabilityData.interval:type_name -> serialization.DbReachabilityInterval
	3,  // 33: serialization.DbReachabilityData.futureCoveringSet:type_name -> serialization.DbHash
	19, // 34: serialization.DbUtxoDiff.toAdd:type_name -> serialization.DbUtxoCollectionItem
	19, // 35: serialization.DbUtxoDiff.toRemove:type_name -> serialization.DbUtxoCollectionItem
	3,  // 36: serialization.DbTips.tips:type_name -> serialization.DbHash
	3,  // 37: serialization.DbBlockGHOSTDAGDataHashPair.hash:type_name -> serialization.DbHash
	15, // 38: serialization.DbBlockGHOSTDAGDataHashPair.GhostdagData:type_name -> serialization.DbBlockGhostdagData
	39, // [39:39] is the sub-list for method output_type
	39, // [39:39] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_dbobjects_proto_init() }
func file_dbobjects_proto_init() {
	if File_dbobjects_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dbobjects_proto_rawDesc), len(file_dbobjects_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dbobjects_proto_goTypes,
		DependencyIndexes: file_dbobjects_proto_depIdxs,
		MessageInfos:      file_dbobjects_proto_msgTypes,
	}.Build()
	File_dbobjects_proto = out.File
	file_dbobjects_proto_goTypes = nil
	file_dbobjects_proto_depIdxs = nil
}
