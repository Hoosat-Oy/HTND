// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.17.2
// source: peer_service.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetPeersListRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	SubnetworkID          []byte                 `protobuf:"bytes,1,opt,name=subnetworkID,proto3" json:"subnetworkID,omitempty"`
	IncludeAllSubnetworks bool                   `protobuf:"varint,2,opt,name=includeAllSubnetworks,proto3" json:"includeAllSubnetworks,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetPeersListRequest) Reset() {
	*x = GetPeersListRequest{}
	mi := &file_peer_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPeersListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeersListRequest) ProtoMessage() {}

func (x *GetPeersListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_peer_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeersListRequest.ProtoReflect.Descriptor instead.
func (*GetPeersListRequest) Descriptor() ([]byte, []int) {
	return file_peer_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetPeersListRequest) GetSubnetworkID() []byte {
	if x != nil {
		return x.SubnetworkID
	}
	return nil
}

func (x *GetPeersListRequest) GetIncludeAllSubnetworks() bool {
	if x != nil {
		return x.IncludeAllSubnetworks
	}
	return false
}

type GetPeersListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Addresses     []*NetAddress          `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPeersListResponse) Reset() {
	*x = GetPeersListResponse{}
	mi := &file_peer_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPeersListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeersListResponse) ProtoMessage() {}

func (x *GetPeersListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_peer_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeersListResponse.ProtoReflect.Descriptor instead.
func (*GetPeersListResponse) Descriptor() ([]byte, []int) {
	return file_peer_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetPeersListResponse) GetAddresses() []*NetAddress {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type NetAddress struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IP            []byte                 `protobuf:"bytes,2,opt,name=IP,proto3" json:"IP,omitempty"`
	Port          uint32                 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetAddress) Reset() {
	*x = NetAddress{}
	mi := &file_peer_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetAddress) ProtoMessage() {}

func (x *NetAddress) ProtoReflect() protoreflect.Message {
	mi := &file_peer_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetAddress.ProtoReflect.Descriptor instead.
func (*NetAddress) Descriptor() ([]byte, []int) {
	return file_peer_service_proto_rawDescGZIP(), []int{2}
}

func (x *NetAddress) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *NetAddress) GetIP() []byte {
	if x != nil {
		return x.IP
	}
	return nil
}

func (x *NetAddress) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

var File_peer_service_proto protoreflect.FileDescriptor

const file_peer_service_proto_rawDesc = "" +
	"\n" +
	"\x12peer_service.proto\"o\n" +
	"\x13GetPeersListRequest\x12\"\n" +
	"\fsubnetworkID\x18\x01 \x01(\fR\fsubnetworkID\x124\n" +
	"\x15includeAllSubnetworks\x18\x02 \x01(\bR\x15includeAllSubnetworks\"A\n" +
	"\x14GetPeersListResponse\x12)\n" +
	"\taddresses\x18\x01 \x03(\v2\v.NetAddressR\taddresses\"N\n" +
	"\n" +
	"NetAddress\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x0e\n" +
	"\x02IP\x18\x02 \x01(\fR\x02IP\x12\x12\n" +
	"\x04port\x18\x03 \x01(\rR\x04port2L\n" +
	"\vPeerService\x12=\n" +
	"\fGetPeersList\x12\x14.GetPeersListRequest\x1a\x15.GetPeersListResponse\"\x00B\x1eZ\x1cgithub.com/Hoosat-Oy/HTND/pbb\x06proto3"

var (
	file_peer_service_proto_rawDescOnce sync.Once
	file_peer_service_proto_rawDescData []byte
)

func file_peer_service_proto_rawDescGZIP() []byte {
	file_peer_service_proto_rawDescOnce.Do(func() {
		file_peer_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_peer_service_proto_rawDesc), len(file_peer_service_proto_rawDesc)))
	})
	return file_peer_service_proto_rawDescData
}

var file_peer_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_peer_service_proto_goTypes = []any{
	(*GetPeersListRequest)(nil),  // 0: GetPeersListRequest
	(*GetPeersListResponse)(nil), // 1: GetPeersListResponse
	(*NetAddress)(nil),           // 2: NetAddress
}
var file_peer_service_proto_depIdxs = []int32{
	2, // 0: GetPeersListResponse.addresses:type_name -> NetAddress
	0, // 1: PeerService.GetPeersList:input_type -> GetPeersListRequest
	1, // 2: PeerService.GetPeersList:output_type -> GetPeersListResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_peer_service_proto_init() }
func file_peer_service_proto_init() {
	if File_peer_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_peer_service_proto_rawDesc), len(file_peer_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_peer_service_proto_goTypes,
		DependencyIndexes: file_peer_service_proto_depIdxs,
		MessageInfos:      file_peer_service_proto_msgTypes,
	}.Build()
	File_peer_service_proto = out.File
	file_peer_service_proto_goTypes = nil
	file_peer_service_proto_depIdxs = nil
}
